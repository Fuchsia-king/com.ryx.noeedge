<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   
<mapper namespace="com.king.nowedge.mapper.ryx.RyxPartnerMapper">  

    
    
    <sql id="select">
		
		t.id,
	    t.user_id userId,
	    t.username,
	    t.email,
	    t.mobile,
	    t.tcreate,
	    t.tmodified,
	    t.ideleted,
	    t.days,
	    t.creater_id createrId,
	    t.type
	    
	</sql>

	<sql id="where">
	
	    <where>
	    
			<if test="id != null">
				<![CDATA[ and id = #{id} ]]>
			</if>
			
			<if test="username != null and username != '' ">
				<![CDATA[ and username = #{username} ]]>
			</if>
			
			<if test="mobile != null and mobile != '' ">
				<![CDATA[ and mobile = #{mobile} ]]>
			</if>
			
			<if test="email != null and email != '' ">
				<![CDATA[ and email = #{email} ]]>
			</if>
			
			<if test="createrId != null ">
				<![CDATA[ and creater_id = #{createrId} ]]>
			</if>
			
			<if test="type != null ">
				<![CDATA[ and type = #{type} ]]>
			</if>
			
			<if test="ideleted != null ">
				<![CDATA[ and ideleted = #{ideleted} ]]>
			</if>
			
			<if test="userId != null ">
				<![CDATA[ and user_id = #{userId} ]]>
			</if>
			
			
		</where>
		
	</sql>
	
	
	<sql id="where1">
	
	    <where>
	    
			<if test="id != null">
				<![CDATA[ and t.id = #{id} ]]>
			</if>
			
			<if test="uid != null">
				<![CDATA[ and t.uid = #{uid} ]]>
			</if>
			
			<if test="username != null">
				<![CDATA[ and t.username = #{username} ]]>
			</if>
			
			<if test="mobile != null">
				<![CDATA[ and t.mobile = #{mobile} ]]>
			</if>
			
			<if test="email != null">
				<![CDATA[ and t.email = #{email} ]]>
			</if>
			
			
			
			<choose>
				<when test="ideleted != null">
					<![CDATA[  and ideleted = #{ideleted} ]]>
				</when>
				<otherwise>
					<![CDATA[  and ideleted = 0 ]]>
				</otherwise>
			</choose>
			
		</where>
		
	</sql>
   
    <insert id="create" parameterType="RyxPartnerDTO">   
       insert into ryx_partner(       
       		
			user_id,
		    username,
		    email,
		   	mobile,
		   	type,
		   	tcreate,
		   	days,
		   	creater_id
		   	
	    
       ) 
       values
       (
       
		    #{userId}, 
		    #{username}, 
		    #{email}, 
		    #{mobile},
		    #{type},  
		    now(),
		    #{days},
		    #{createrId}
       	
       ) 
    </insert>
      
      
     


	<select id="query1" resultType="java.lang.Long" parameterType="RyxPartnerQuery">
         
        select t.id
        
        from ryx_partner t
		join ryx_course c
		on t.id=c.tid
        
        <include refid="where1"/>
		
		group by t.id
		
		<if test="pageSize != null">
			limit ${startRow}, ${pageSize}
		</if>		
		
    </select>
    
    <select id="query" resultType="RyxPartnerDTO" parameterType="RyxPartnerQuery">
         
        select
         
        <include refid="select"/>
        
        from ryx_partner t
        
        <include refid="where"/>
		
		<if test="orderBy != null and orderBy !=''">
			order by ${orderBy}	
			<if test="sooort != null and sooort !=''">
				${sooort}
			</if>	
		</if>
		
		<if test="pageSize != null">
			limit ${startRow}, ${pageSize}
		</if>		
		
    </select>
     
    
    <select id="countQuery" resultType="java.lang.Integer" parameterType="RyxPartnerQuery">   
        select count(1) from ryx_partner t 
        <include refid="where"/>
    </select>
    
    <select id="countQuery1" resultType="java.lang.Integer" parameterType="RyxPartnerQuery">   
        
        select count(1) from
        (
	        select t.id     
	        from ryx_partner t
			join ryx_course c
			on t.id=c.tid        
	        <include refid="where1"/>		
			group by t.id 
		) a
		
    </select>
    
    <select id="getById" resultType="RyxPartnerDTO" parameterType="java.lang.Long">   
        select 
        <include refid="select"/>
        from ryx_partner t where id = #{id}  limit 1;
    </select>   
    
     <select id="getByUserId" resultType="RyxPartnerDTO" parameterType="RyxPartnerDTO">   
        select 
        <include refid="select"/>
        from ryx_partner t where user_id = #{userId} and type=#{type} and ideleted=#{ideleted} limit 1;
    </select>   
    
    <select id="queryByIdMember" resultType="RyxPartnerDTO" parameterType="RyxPartnerQuery">   
        select 
        <include refid="select"/>
        from ryx_partner t where id = #{id} and member =#{member} limit 1;
    </select>
    
    <select id="queryByUid" resultType="RyxPartnerDTO" parameterType="java.lang.String">   
        select 
        <include refid="select"/>
        from ryx_partner t where uid = #{uid}  limit 1; 
    </select>
    
     <select id="queryPassdByUid" resultType="java.lang.String" parameterType="java.lang.String">   
        select passd from ryx_partner t where uid = #{uid}  limit 1; 
    </select>    
    
    <select id="queryByCode" resultType="RyxPartnerDTO" parameterType="java.lang.String">   
        select 
        <include refid="select"/>
        from ryx_partner t where code = #{code} and ideleted =0 limit 1; 
    </select> 
    
    
    <update id="update" parameterType="RyxPartnerDTO">
    
        update ryx_partner
         
        <set>	
					
			<if test="username != null">
				<![CDATA[ username = #{username} ]]>,
			</if>
			
			
			<if test="mobile != null">
				<![CDATA[ mobile = #{mobile} ]]>,
			</if>
			
			
			<if test="email != null">
				<![CDATA[ email = #{email} ]]>,
			</if>
			
			<if test="email != null">
				<![CDATA[ email = #{email} ]]>,
			</if>
			
			<if test="days != null">
				<![CDATA[ days = #{days} ]]>,
			</if>
			
			
			creater_id = #{createrId},
			tmodified = now() 
			 
		 </set>
		 
		 where	id = #{id} and type=#{type}
		 	
    </update> 
  
    
    <delete id="delete" parameterType="java.lang.String">
    
        update ryx_partner
         
        set ideleted = 1
		 
		where uid = #{uid}
		 	
    </delete> 
    
</mapper> 