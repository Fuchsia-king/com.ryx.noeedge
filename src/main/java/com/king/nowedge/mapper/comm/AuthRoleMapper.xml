<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   
<mapper namespace="com.king.nowedge.mapper.AuthRoleMapper">  

	<sql id="select">
		id,
		sysmenu_id sysmenuId,
		role_id roleId,
		creater,
		tcreate,
		tmodified,
		ideleted		
	</sql>

	<sql id="where">
	
	    <where>
	    
			<if test="sysmenuId != null">
				and sysmenu_id = #{sysmenuId}
			</if>
			
			<if test="roleId != null">
				and role_id = #{roleId}
			</if>
			
			<if test="ideleted != null">
				and ideleted = #{ideleted}
			</if>
			
		</where>
		
	</sql>
	
	<sql id="update">
		 <set>	
					
			<if test="sysmenuId != null">
				<![CDATA[ sysmenu_id = #{sysmenuId} ]]>,
			</if>
			
			
			<if test="roleId != null">
				<![CDATA[ role_id = #{roleId} ]]>,
			</if>
			
			<if test="ideleted != null">
				<![CDATA[ ideleted = #{ideleted} ]]>,
			</if>
			
			
			 creater = #{creater},
			 tmodified = now()
			 
		 </set>
	
	</sql>
	
   
    <insert id="create" parameterType="AuthRoleDTO">  
       insert into auth_role(sysmenu_id,creater,role_id,tcreate,tmodified,ideleted) 
       values
       (#{sysmenuId},#{creater},#{roleId},now(),now(),#{ideleted}) 
    </insert>   
    
    
    <insert id="auth" parameterType="java.util.List">
             
       	insert into auth_role(sysmenu_id,creater,role_id,tcreate,tmodified,ideleted) 
       	values
       	    	
       	<foreach collection="list" item="item" index="index" separator="," >  
        	(#{item.sysmenuId},#{item.creater},#{item.roleId},now(),now(),#{item.ideleted})  
    	</foreach>
        
    </insert>  
    
    <select id="query" resultType="AuthRoleDTO" parameterType="RoleQuery">
         
        select 
        <include refid="select"/>
        from auth_role
        
        <include refid="where"/>
		
		<if test="orderBy != null and orderBy !=''">
			order by ${orderBy}	
			<if test="sooort != null and sooort !=''">
				${sooort}
			</if>	
		</if>
		
		<if test="pageSize != null">
			limit ${startRow}, ${pageSize}
		</if>		
		
    </select>
    
    
    <select id="queryRoleByUserId" resultType="java.lang.String" parameterType="java.lang.String">         
        select role_id from auth_role where sysmenu_id = #{sysmenuId}		
    </select>
    
    <select id="countQuery" resultType="java.lang.Integer" parameterType="RoleQuery">  
        select count(1) from auth_role 
        <include refid="where"/>
    </select>
    
    <select id="queryById" resultType="AuthRoleDTO" parameterType="java.lang.Long">   
        select * from auth_role where id = #{id}  limit 1;
    </select>    
    
    <select id="queryByUid" resultType="AuthRoleDTO" parameterType="java.lang.String">   
        select * from auth_role where sysmenu_id = #{sysmenuId} ;
    </select>  
    
    
    <update id="update" parameterType="AuthRoleDTO">
    
        update auth_role
         
        <include refid="update"/>
		 
		where sysmenu_id = #{sysmenuId}
		 	
    </update> 
    
    
    <update id="updateByAuthRole" parameterType="AuthRoleDTO">
    
        update auth_role
         
       <include refid="update"/>
		 
		where sysmenu_id = #{sysmenuId} and role_id = #{roleId}
		 	
    </update> 
    
     
    <update id="deleteByRoleId" parameterType="java.lang.String">    
    	update auth_role set ideleted = 1 where role_id = #{roleId}		 	
    </update>
    
    
    
    
</mapper> 