<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   
    
<mapper namespace="com.king.nowedge.mapper.RecruitmentMapper">  

	<sql id="where">
	
	    <where>
	    
	    	<if test="position != null and position != '' ">
				<![CDATA[ and position like '%${position}%' ]]>
			</if>
	    
			<if test="code != null and code != '' ">
				<![CDATA[ and code = #{code} ]]>
			</if>
			
			<if test="company != null and company != '' ">
				<![CDATA[ and company = #{company} ]]>
			</if>
			
			<if test="province != null and province != '' ">
				<![CDATA[ and province = #{province} ]]>
			</if>
			
			<if test="city != null and city != '' ">
				<![CDATA[ and city = #{city} ]]>
			</if>
			
			<if test="member != null">
				<![CDATA[ and member = #{member} ]]>
			</if>
			
			<choose>
				<when test="ideleted != null">
					<![CDATA[  and ideleted = #{ideleted} ]]>
				</when>
				<otherwise>
					<![CDATA[  and ideleted = 0 ]]>
				</otherwise>
			</choose>
			
		</where>
	</sql>
	
	
	<sql id="select">
		
		id,
	    uid,
	    member,
	    company,
	    position,
	    nbr,
	    specialty,
	    education_level educationLevel,
	    working_years workingYears,
	    salary,
	    descr,
	    email,
	    city,
	    province,
	    contact,
	    phone,
	    addr,
	    wellfare,
	    creater,
	    tcreate,
	    tmodified,
	    ideleted
	    
	</sql>
   
    <insert id="create" parameterType="RecruitmentDTO">   
       insert into recruitment(
	       uid,
	       member,
	       company,
	       position,
	       nbr,
	       specialty,
	       education_level,
	       working_years,
	       salary,
	       descr,
	       email,
	       contact,
	       phone,
	       addr,
	       wellfare,
	       province,
	       city,
	       creater,tcreate,tmodified,ideleted
       ) 
       values
       (
	       #{uid},	       
	       #{member},
	       #{company},
	       #{position},
	       #{nbr},
	       #{specialty},
	       #{educationLevel},
	       #{workingYears},
	       #{salary},
	       #{descr},
	       #{email},
	       #{contact},
	       #{phone},
	       #{addr},
	       #{wellfare},
	       #{province},
	       #{city},
	       #{creater},now(),now(),#{ideleted}
       ) 
    </insert>
      
    
    <select id="query" resultType="RecruitmentDTO" parameterType="RecruitmentQuery">
         
        select 
        
        <include refid="select"/>
        
        from recruitment 
        
        <include refid="where"/>
		
		<if test="orderBy != null and orderBy !=''">
			order by ${orderBy}	
			<if test="sooort != null and sooort !=''">
				${sooort}
			</if>	
		</if>
		
		<if test="pageSize != null">
			limit ${startRow}, ${pageSize}
		</if>		
		
    </select>
     
    <select id="queryAll" resultType="RecruitmentDTO">
         
        select code,name from recruitment where ideleted = 0 order by name 
		
    </select>
    
    <select id="countQuery" resultType="java.lang.Integer" parameterType="RecruitmentQuery">   
        select count(1) from recruitment 
        <include refid="where"/>
    </select>
    
    <select id="queryById" resultType="RecruitmentDTO" parameterType="java.lang.Long">   
        select 
        <include refid="select"/>
        from recruitment where id = #{id}  limit 1;
    </select>
    
    <select id="queryByIdMember" resultType="RecruitmentDTO" parameterType="RecruitmentQuery">   
        select         
        <include refid="select"/>        
        from recruitment where id = #{id} and member= #{member} limit 1;
    </select>    
        
    
    
    
    
    <select id="queryByUid" resultType="RecruitmentDTO" parameterType="java.lang.String">   
        select 
        
        <include refid="select"/>
        
        from recruitment where uid = #{uid}  limit 1; 
    </select>
    
     <select id="queryPassdByUid" resultType="java.lang.String" parameterType="java.lang.String">   
        select passd from recruitment where uid = #{uid}  limit 1; 
    </select>    
    
    <select id="queryByCode" resultType="RecruitmentDTO" parameterType="java.lang.String">   
        select * from recruitment where code = #{code} and ideleted =0 limit 1; 
    </select> 
    
    
    <update id="update" parameterType="RecruitmentDTO">
    
        update recruitment
         
        <set>	
					
			<if test="company != null">
				<![CDATA[ company = #{company} ]]>,
			</if>
			
			<if test="position != null">
				<![CDATA[ position = #{position} ]]>,
			</if>
			
			<if test="nbr != null">
				<![CDATA[ nbr = #{nbr} ]]>,
			</if>
			
			<if test="specialty != null">
				<![CDATA[ specialty = #{specialty} ]]>,
			</if>
			
			<if test="educationLevel != null">
				<![CDATA[ education_level = #{educationLevel} ]]>,
			</if>
			
			<if test="workingYears != null">
				<![CDATA[ working_years = #{workingYears} ]]>,
			</if>

			<if test="salary != null">
				<![CDATA[ salary = #{salary} ]]>,
			</if>
			
			
			<if test="descr != null">
				<![CDATA[ descr = #{descr} ]]>,
			</if>
			
			<if test="email != null">
				<![CDATA[ email = #{email} ]]>,
			</if>
			
			<if test="contact != null">
				<![CDATA[ contact = #{contact} ]]>,
			</if>
			
			<if test="phone != null">
				<![CDATA[ phone = #{phone} ]]>,
			</if>
			
			<if test="addr != null">
				<![CDATA[ addr = #{addr} ]]>,
			</if>
			
			
			<if test="wellfare != null">
				<![CDATA[ wellfare = #{wellfare} ]]> ,
			</if>
			
			 creater = #{creater},
			 tmodified = now() 
			
		 </set>
		 
		 where	id = #{id} and member=#{member} 
		 	
    </update> 
    
    <update id="changePassd" parameterType="RecruitmentDTO">
    	 update recruitment set passd = #{passd} where uid = #{uid}
    </update>
    
    <delete id="delete" parameterType="RecruitmentDTO">
        update recruitment
         
        set ideleted = 1
		 
		where uid = #{uid}
		 	
    </delete> 
    
</mapper> 