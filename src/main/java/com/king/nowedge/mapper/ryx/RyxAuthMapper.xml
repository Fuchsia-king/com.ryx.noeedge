<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">   
<mapper namespace="com.king.nowedge.mapper.ryx.RyxAuthMapper">  

    
    
    <sql id="select">
		
		id,
	    uid,
	    username,
	    type,
	    mechanism,
	    auth_status authStatus,
	    name,
	    gender,
	    auth_type authType,
	    dn_code dnCode,
	    dn_pic1 dnPic1,
	    dn_pic2 dnPic2,
	    telphone,
	    email,
	    address,
	    bank,
	    cbank,
	    account_holder accountHolder,
	    bank_account bankAccount,
	    org_iname orgIname,
	    org_fname orgFname,
	    create_time createTime,
	    pass_time passTime,
	    status,
	    description,
	    reason,
	    cert_status certStatus,
	    tags,
	    be_good_at beGoodAt
    
	    
	</sql>

	<sql id="where">
	
	    <where>
	    
	    	<if test="uid != null">
				<![CDATA[ and uid = #{uid} ]]>
			</if>
			
			<if test="username != null">
				<![CDATA[ and username = #{username} ]]>
			</if>
			
			<if test="type != null">
				<![CDATA[ and type = #{type} ]]>
			</if>
			
			<if test="authStatus != null">
				<![CDATA[ and auth_status = #{authStatus} ]]>
			</if>
			
			
		</where>
	</sql>
   
    <insert id="create" parameterType="RyxAuthDTO">   
    
       insert into ryx_auth(
       
		    uid,
		    username,
		    type,
		    mechanism,
		    auth_status,
		    name,
		    gender,
		    auth_type,
		    dn_code,
		    dn_pic1,
		    dn_pic2,
		    telphone,
		    email,
		    address,
		    bank,
		    cbank,
		    account_holder,
		    bank_account,
		    org_iname,
		    org_fname,
		    create_time,
		    pass_time,
		    status,
		    description,
		    reason,
		    cert_status,
		    be_good_at,
		    tags
    
       ) 
       values
       (
		    #{uid},
		    #{username},
		    #{type},
		    #{mechanism},
		    #{authStatus},
		    #{name},
		    #{gender},
		    #{authType},
		    #{dnCode},
		    #{dnPic1},
		    #{dnPic2},
		    #{telphone},
		    #{email},
		    #{address},
		    #{bank},
		    #{cbank},
		    #{accountHolder},
		    #{bankAccount},
		    #{orgIname},
		    #{orgFname},
		    #{createTime},
		    #{passTime},
		    #{status},
		    #{description},
		    #{reason},
		    #{certStatus},
		    #{beGoodAt},
		    #{tags}
		    
       ) 
       
       	<selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">
			select LAST_INSERT_ID() 
		</selectKey>
    </insert>
      
    
    <select id="query" resultType="RyxAuthDTO" parameterType="RyxAuthQuery">
         
        select
         
        <include refid="select"/>
        
        from ryx_auth 
        
        <include refid="where"/>
		
		<if test="orderBy != null and orderBy !=''">
			order by ${orderBy}	
			<if test="sooort != null and sooort !=''">
				${sooort}
			</if>	
		</if>
		
		<if test="pageSize != null">
			limit ${startRow}, ${pageSize}
		</if>		
		
    </select>
    
    
	
	
    
    
    <select id="getByUid" resultType="RyxAuthDTO"  parameterType="java.lang.Long" >         
        select 
		<include refid="select"/>
 		from ryx_auth where uid = #{uid} limit 1;
    </select>
    
    
    
    <select id="getUserByEmailAndValidateCode" resultType="RyxAuthDTO"  parameterType="RyxAuthDTO" >         
        select 
		<include refid="select"/>
		from ryx_auth where email=#{email} and validateCode=#{validateCode}
    </select>
    
    
    <select id="getUserByEmail" resultType="RyxAuthDTO"  parameterType="java.lang.String" >         
        select 
		<include refid="select"/>
		from ryx_auth where email=#{email} 
    </select>
    
    <select id="getUserByMobile" resultType="RyxAuthDTO"  parameterType="java.lang.String" >         
        select 
		<include refid="select"/>
		from ryx_auth where mobile=#{mobile} 
    </select>
    
    <select id="getByOpenId" resultType="RyxAuthDTO"  parameterType="java.lang.String" >         
        select 
		<include refid="select"/>
		from ryx_auth  where qq_open_id=#{qqOpenId}
    </select>
    
    
    <select id="checkUserLogin" resultType="RyxAuthDTO"  parameterType="RyxAuthQuery" >         
        select 
		<include refid="select"/>
		from ryx_auth t where (t.email=#{email} and password=#{password}) or (t.mobile=#{mobile} and password=#{password})
    </select>
    
    
    <select id="checkUserLoginByUseramePassword" resultType="RyxAuthDTO"  parameterType="RyxAuthQuery" >         
        select 
		<include refid="select"/>
		from ryx_auth t where t.username=#{username} and t.password=#{password}
    </select>
    
    
    <select id="countQuery" resultType="java.lang.Integer" parameterType="RyxAuthQuery">   
        select count(1) from ryx_auth 
        <include refid="where"/>
    </select>
    
  
    
    <select id="getById" resultType="RyxAuthDTO" parameterType="java.lang.Long">   
        select 
        <include refid="select"/>
        from ryx_auth where id = #{id}  limit 1;
    </select> 
    
    <select id="queryByUid" resultType="RyxAuthDTO" parameterType="java.lang.Long">   
        select 
        <include refid="select"/>
        from ryx_auth where uid = #{uid} limit 1; 
    </select>
    
    
    
    <update id="update" parameterType="RyxAuthDTO">
    
        update ryx_auth
         
        <set>	
					
			<if test="username != null">
				<![CDATA[ username = #{username} ]]>,
			</if>
			
			<if test="type != null">
				<![CDATA[ type = #{type} ]]>,
			</if>
			
			<if test="mechanism != null">
				<![CDATA[ mechanism = #{mechanism} ]]>,
			</if>
			
			<if test="authStatus != null">
				<![CDATA[ auth_status = #{authStatus} ]]>,
			</if>
			
			<if test="name != null">
				<![CDATA[ name = #{name} ]]>,
			</if>
			
			<if test="gender != null">
				<![CDATA[ gender = #{gender} ]]>,
			</if>

			<if test="authType != null">
				<![CDATA[ auth_type = #{authType} ]]>,
			</if>
			
			<if test="dnCode != null">
				<![CDATA[ dn_code = #{dnCode} ]]>,
			</if>
			
			<if test="dnPic1 != null">
				<![CDATA[ dn_pic1 = #{dnPic1} ]]>,
			</if>
			
			<if test="dnPic2 != null">
				<![CDATA[ dn_pic2 = #{dnPic2} ]]>,
			</if>
			
			<if test="telphone != null">
				<![CDATA[ telphone = #{telphone} ]]>,
			</if>
			
			<if test="email != null">
				<![CDATA[ email = #{email} ]]>,
			</if>
			
			<if test="address != null">
				<![CDATA[ address = #{address} ]]>,
			</if>
			
			
			<if test="bank != null">
				<![CDATA[ bank = #{bank} ]]>,
			</if>
			
			<if test="cbank != null">
				<![CDATA[ cbank = #{cbank} ]]>,
			</if>
			
			<if test="accountHolder != null">
				<![CDATA[ account_holder = #{accountHolder} ]]>,
			</if>
			
			<if test="bankAccount != null">
				<![CDATA[ bank_account = #{bankAccount} ]]>,
			</if>
			
			<if test="orgIname != null">
				<![CDATA[ org_iname = #{orgIname} ]]>,
			</if>
			
			<if test="orgFname != null">
				<![CDATA[ org_fname = #{orgFname} ]]>,
			</if>
			
			<if test="createTime != null">
				<![CDATA[ create_time = #{createTime} ]]>,
			</if>
			
			<if test="passTime != null">
				<![CDATA[ pass_time = #{passTime} ]]>,
			</if>
			
			<if test="status != null">
				<![CDATA[ status = #{status} ]]>,
			</if>
			
			<if test="description != null">
				<![CDATA[ description = #{description} ]]>,
			</if>
			
			<if test="reason != null">
				<![CDATA[ reason = #{reason} ]]>,
			</if>
			
			<if test="certStatus != null">
				<![CDATA[ cert_status = #{certStatus} ]]>,
			</if>
			
			
			<if test="tags != null">
				<![CDATA[ tags = #{tags} ]]>,
			</if>
			
			
			<if test="beGoodAt != null">
				<![CDATA[ be_good_at = #{beGoodAt} ]]>,
			</if>
		 </set>
		 
		where id=#{id}
		 <if test="uid != null and uid != ''">
			<![CDATA[and  uid = #{uid} ]]>
		 </if>
		 	
    </update> 
    
    
    
    <delete id="delete" parameterType="java.lang.String">
    
        update ryx_auth
         
        set ideleted = 1
		 
		where uid = #{uid}
		 	
    </delete> 
    
</mapper> 